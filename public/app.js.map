{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config.ts","webpack:///./src/utils.ts","webpack:///./src/game-engine.ts","webpack:///./src/keyboard-controls.ts","webpack:///./src/event-handler.ts","webpack:///./src/color.ts","webpack:///./src/firework/config.ts","webpack:///./src/firework/particle.ts","webpack:///./src/firework/firework.ts","webpack:///./src/firework/star.ts","webpack:///./src/firework/firework-service.ts","webpack:///./src/game-controller.ts","webpack:///./src/player-manager.ts","webpack:///./src/player.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Config","canvasWidth","canvasHeight","lineWidth","fps","angleModifier","pixelsPerSecond","scoreBoardWith","holeSize","holeFrequency","getRandomNumber","minimum","maximum","Math","floor","random","EKeyCode","EMouseClick","game_engine_GameEngine","GameEngine","canvas","players","this","interval","stepsUntilHolePerPlayer","Map","holeSizePerPlayer","speed","playerRanks","canvasContext","prepare","_this","Promise","resolve","reject","resolveCallback","draw","start","window","setInterval","stop","clearInterval","filter","player","isActive","isAlive","forEach","isTurningLeft","angle","isTurningRight","deltaX","cos","PI","deltaY","sin","hitTest","x","xPosition","y","yPosition","unshift","alivePlayers","length","has","id","set","getStepsUntilNextHole","strokeStyle","color","fillStyle","beginPath","moveTo","lineTo","stroke","point","getImageData","data","EColor","EventHandler","addEventListener","node","eventName","callback","callbackListener","event","eventCallbacks","removeEventListener","entry","delete","oneTimeEventListener","FireworkConfig","minStrength","maxStrength","minTrails","maxTrails","gravity","airResistance","numberOfStars","fireworkLifeTime","trailLength","delay","particle_Particle","Particle","drawingContext","vx","vy","ax","ay","lifeTime","radius","path","update","shift","push","opacity","trunc","closePath","fill","arc","firework_Firework","Firework","strength","life","particles","star_Star","Star","maxStarRadius","flashingFactor","b","firework_service_FireworkService","FireworkService","withStars","stars","isRunning","mainWithThis","main","firework1","firework2","createStars","saveDrawingSurface","animationId","cancelAnimationFrame","restoreDrawingSurface","star","requestAnimationFrame","previousState","putImageData","game_controller_GameController","GameController","playerManager","frameLineWidth","fireworkService","drawKeySettings","startGameEventListener","keyCode","Space","Enter","getNumberOfActivePlayers","drawGameFrames","gameEngine","getPlayers","initializePlayers","startRound","drawPlayingFieldFrame","then","ranks","updateScores","drawScoreboard","getHighestScore","getMaxScore","drawWinningScreen","document","startNextRoundKeyboardEvent","startEngingeKeyboardEvent","textAlign","font","fontSize","playersWon","score","textString","map","join","textWidth","measureText","width","index","textChunk","fillText","resetActiveStatus","resetScores","startNewGameKeyboardEvent","clearRect","strokeRect","getKeyName","leftControl","rightControl","togglePlayerReadyStateKeyboard","togglePlayerReadyStateMouse","activePlayer","preventDefault","button","find","Left","drawPlayerReadyState","Right","inactivePlayer","state","playerIndex","findIndex","currentPlayer","One","Q","LAlt","RAlt","M","Comma","P","SZ","Down","Y","X","rect","padStart","player_manager_PlayerManager","PlayerManager","addPlayer","Error","bindKeyboardControls","removePlayer","Array","from","values","scores","max","apply","Player","_xPosition","_yPosition","_angle","_isAlive","_score","_isTurningLeft","_isTurningRight","_isActive","_id","_name","_color","_leftControl","_rightControl","configurable","onload","body","clientWidth","clientHeight","canvasElement","getElementById","height","getContext","drawIntroText","player1","Red","player2","Yellow","player3","Orange","player4","Green","player5","Pink","player6","Blue"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var Config = /** @class */ (function () {\n    function Config() {\n    }\n    Config.canvasWidth = 0;\n    Config.canvasHeight = 0;\n    Config.lineWidth = 4;\n    Config.fps = 80;\n    /**\n     * Defines how many degrees a line should turn when turning left/right\n     */\n    Config.angleModifier = 2;\n    /**\n     * Defines the speed\n     */\n    Config.pixelsPerSecond = 100;\n    Config.scoreBoardWith = 150;\n    /**\n     * the width of holes\n     */\n    Config.holeSize = 10;\n    /**\n     * Defines the frequency with that holes appear. the lower, the less holes appear.\n     * Has to be greater than 0.\n     */\n    Config.holeFrequency = 10;\n    return Config;\n}());\nexport { Config };\n","function getRandomNumber(minimum, maximum) {\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\nexport { getRandomNumber };\n","import { Config } from './config';\nimport { getRandomNumber } from './utils';\nvar GameEngine = /** @class */ (function () {\n    function GameEngine(canvas, players) {\n        this.interval = 0;\n        this.stepsUntilHolePerPlayer = new Map();\n        this.holeSizePerPlayer = new Map();\n        this.speed = Config.pixelsPerSecond * (1000 / Config.fps / 1000);\n        this.playerRanks = [];\n        this.canvasContext = canvas;\n        this.players = players;\n    }\n    GameEngine.prototype.prepare = function () {\n        var _this = this;\n        if (this.interval) {\n            return new Promise(function (resolve) { return resolve([]); });\n        }\n        return new Promise(function (resolve, reject) {\n            _this.resolveCallback = resolve;\n            _this.playerRanks = [];\n            // Start drawing first few pixels so everybody knows his start position\n            _this.draw();\n            _this.draw();\n            _this.draw();\n            _this.draw();\n        });\n    };\n    GameEngine.prototype.start = function () {\n        var _this = this;\n        if (!this.interval) {\n            this.interval = window.setInterval(function () {\n                _this.draw();\n            }, 1000 / Config.fps);\n        }\n    };\n    GameEngine.prototype.stop = function () {\n        clearInterval(this.interval);\n        this.interval = 0;\n        if (this.resolveCallback) {\n            this.resolveCallback(this.playerRanks);\n        }\n    };\n    GameEngine.prototype.draw = function () {\n        var _this = this;\n        this.players\n            .filter(function (player) {\n            return player.isActive && player.isAlive;\n        })\n            .forEach(function (player) {\n            if (player.isTurningLeft) {\n                player.angle -= Config.angleModifier;\n            }\n            if (player.isTurningRight) {\n                player.angle += Config.angleModifier;\n            }\n            var deltaX = Math.cos(player.angle * Math.PI / 180) * _this.speed;\n            var deltaY = Math.sin(player.angle * Math.PI / 180) * _this.speed;\n            if (_this.hitTest({ x: player.xPosition + deltaX, y: player.yPosition + deltaY })) {\n                _this.playerRanks.unshift(player);\n                player.isAlive = false;\n                var alivePlayers = _this.players.filter(function (player) {\n                    return player.isAlive;\n                });\n                if (alivePlayers.length < 2) {\n                    alivePlayers.forEach(function (player) {\n                        _this.playerRanks.unshift(player);\n                    });\n                    _this.stop();\n                }\n            }\n            if (!_this.stepsUntilHolePerPlayer.has(player.id)) {\n                _this.stepsUntilHolePerPlayer.set(player.id, _this.getStepsUntilNextHole());\n            }\n            if (_this.stepsUntilHolePerPlayer.get(player.id) === 0) {\n                if (!_this.holeSizePerPlayer.has(player.id)) {\n                    _this.holeSizePerPlayer.set(player.id, 0);\n                }\n                else {\n                    var holeSize = (_this.holeSizePerPlayer.get(player.id) || 0) + 1;\n                    _this.holeSizePerPlayer.set(player.id, holeSize);\n                    if (holeSize >= Config.holeSize) {\n                        _this.stepsUntilHolePerPlayer.set(player.id, _this.getStepsUntilNextHole());\n                        _this.holeSizePerPlayer.set(player.id, 0);\n                    }\n                }\n            }\n            else {\n                _this.stepsUntilHolePerPlayer.set(player.id, (_this.stepsUntilHolePerPlayer.get(player.id) || 1) - 1);\n                _this.canvasContext.strokeStyle = player.color;\n                _this.canvasContext.fillStyle = player.color;\n                _this.canvasContext.beginPath();\n                _this.canvasContext.lineWidth = Config.lineWidth;\n                _this.canvasContext.moveTo(player.xPosition, player.yPosition);\n                _this.canvasContext.lineTo(player.xPosition + deltaX, player.yPosition + deltaY);\n                _this.canvasContext.stroke();\n            }\n            player.xPosition += deltaX;\n            player.yPosition += deltaY;\n        });\n    };\n    GameEngine.prototype.getStepsUntilNextHole = function () {\n        return Math.floor(getRandomNumber(1, 100) * (100 / Config.holeFrequency));\n    };\n    GameEngine.prototype.hitTest = function (point) {\n        if (point.x > Config.canvasWidth || point.y > Config.canvasHeight || point.x < 0 || point.y < 0) {\n            return true;\n        }\n        if (this.canvasContext.getImageData(point.x, point.y, 1, 1).data[3] > 100) {\n            return true;\n        }\n        return false;\n    };\n    return GameEngine;\n}());\nexport { GameEngine };\n","var EKeyCode;\n(function (EKeyCode) {\n    EKeyCode[EKeyCode[\"One\"] = 49] = \"One\";\n    EKeyCode[EKeyCode[\"Q\"] = 81] = \"Q\";\n    EKeyCode[EKeyCode[\"LAlt\"] = 17] = \"LAlt\";\n    EKeyCode[EKeyCode[\"RAlt\"] = 18] = \"RAlt\";\n    EKeyCode[EKeyCode[\"M\"] = 77] = \"M\";\n    EKeyCode[EKeyCode[\"Comma\"] = 188] = \"Comma\";\n    EKeyCode[EKeyCode[\"P\"] = 80] = \"P\";\n    EKeyCode[EKeyCode[\"SZ\"] = 189] = \"SZ\";\n    EKeyCode[EKeyCode[\"Left\"] = 37] = \"Left\";\n    EKeyCode[EKeyCode[\"Down\"] = 40] = \"Down\";\n    EKeyCode[EKeyCode[\"Space\"] = 32] = \"Space\";\n    EKeyCode[EKeyCode[\"Enter\"] = 13] = \"Enter\";\n    EKeyCode[EKeyCode[\"Y\"] = 89] = \"Y\";\n    EKeyCode[EKeyCode[\"X\"] = 88] = \"X\";\n})(EKeyCode || (EKeyCode = {}));\nvar EMouseClick;\n(function (EMouseClick) {\n    EMouseClick[\"Left\"] = \"Left\";\n    EMouseClick[\"Right\"] = \"Right\";\n})(EMouseClick || (EMouseClick = {}));\nexport { EKeyCode, EMouseClick };\n","var EventHandler = /** @class */ (function () {\n    function EventHandler() {\n    }\n    /**\n     * Registers a new event listener and adds it to the stack.\n     *\n     * @param {string} name of the function. should be unique. otherwise there will be conflicts\n     * @param {Node} node that registers the event. Usually something like document or element\n     * @param {string} eventName of the DOM Event that triggers the action.\n     * For example keydown, keyup, mousedown, etc.\n     * @param callback that will eventually be executed.\n     */\n    EventHandler.addEventListener = function (name, node, eventName, callback) {\n        var callbackListener = function (event) {\n            return callback(event);\n        };\n        node.addEventListener(eventName, callbackListener);\n        this.eventCallbacks.set(name, { node: node, eventName: eventName, callback: callbackListener });\n    };\n    /**\n     * Removes an existing event listener\n     *\n     * @param {string} name of the event\n     */\n    EventHandler.removeEventListener = function (name) {\n        var entry = this.eventCallbacks.get(name);\n        if (entry) {\n            entry.node.removeEventListener(entry.eventName, entry.callback);\n            this.eventCallbacks.delete(name);\n        }\n    };\n    /**\n     * Registers a one time event that will automatically deregister itself after being executed once\n     *\n     * @param {Node} node that registers the event. Usually something like document or element\n     * @param {string} eventName of the DOM Event that triggers the action.\n     * For example keydown, keyup, mousedown, etc.\n     * @param callback that will eventually be executed.\n     */\n    EventHandler.oneTimeEventListener = function (node, eventName, callback) {\n        var callbackListener = function (event) {\n            node.removeEventListener(eventName, callbackListener);\n            return callback(event);\n        };\n        node.addEventListener(eventName, callbackListener);\n    };\n    /**\n     * Stack that holds events until they are eventually deregistered\n     */\n    EventHandler.eventCallbacks = new Map();\n    return EventHandler;\n}());\nexport { EventHandler };\n","var EColor;\n(function (EColor) {\n    EColor[\"Red\"] = \"#CC361F\";\n    EColor[\"Yellow\"] = \"#DBDE4B\";\n    EColor[\"Orange\"] = \"#EC7B34\";\n    EColor[\"Green\"] = \"#5FD441\";\n    EColor[\"Pink\"] = \"#DA4FAF\";\n    EColor[\"Blue\"] = \"#4AAAD7\";\n})(EColor || (EColor = {}));\nexport { EColor };\n","var FireworkConfig = /** @class */ (function () {\n    function FireworkConfig() {\n    }\n    FireworkConfig.minStrength = 1.5;\n    FireworkConfig.maxStrength = 7;\n    FireworkConfig.minTrails = 10;\n    FireworkConfig.maxTrails = 30;\n    FireworkConfig.gravity = 5e-2;\n    FireworkConfig.airResistance = 1e-3;\n    FireworkConfig.numberOfStars = 150;\n    FireworkConfig.fireworkLifeTime = 150;\n    FireworkConfig.trailLength = 150;\n    FireworkConfig.delay = 0.5;\n    return FireworkConfig;\n}());\nexport { FireworkConfig };\n","import { FireworkConfig } from './config';\nvar Particle = /** @class */ (function () {\n    function Particle(drawingContext, x, y, vx, vy, ax, ay, color) {\n        this.drawingContext = drawingContext;\n        this.x = x;\n        this.y = y;\n        this.vx = vx;\n        this.vy = vy;\n        this.ax = ax;\n        this.ay = ay;\n        this.color = color;\n        this.lifeTime = FireworkConfig.fireworkLifeTime;\n        this.radius = 3;\n        this.path = [];\n    }\n    Particle.prototype.update = function () {\n        this.lifeTime--;\n        // add point to path but if full, remove a point first\n        if (this.path.length >= FireworkConfig.trailLength)\n            this.path.shift();\n        this.path.push([this.x, this.y]);\n        // update speed n position n stuff\n        this.vy += this.ay;\n        this.vx += this.ax;\n        this.x += this.vx;\n        this.y += this.vy;\n    };\n    Particle.prototype.draw = function () {\n        var opacity = Math.trunc(this.lifeTime * 100 / FireworkConfig.fireworkLifeTime) / 100;\n        // tail\n        this.drawingContext.fillStyle = \"rgba(\" + this.color + \",\" + opacity * 0.4 + \")\";\n        if (this.lifeTime > FireworkConfig.fireworkLifeTime * 0.95) {\n            this.drawingContext.fillStyle = '#fff';\n        }\n        this.drawingContext.lineWidth = 40;\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(this.x - this.radius, this.y);\n        this.drawingContext.lineTo(this.path[0][0], this.path[0][1]);\n        this.drawingContext.lineTo(this.x + this.radius, this.y);\n        this.drawingContext.closePath();\n        this.drawingContext.fill();\n        // main dot\n        this.drawingContext.fillStyle = \"rgba(\" + this.color + \",\" + opacity + \")\";\n        if (this.lifeTime > FireworkConfig.fireworkLifeTime * 0.95) {\n            this.drawingContext.fillStyle = '#fff';\n        }\n        this.drawingContext.beginPath();\n        this.drawingContext.arc(Math.trunc(this.x), Math.trunc(this.y), this.radius, 0, Math.PI * 2);\n        this.drawingContext.fill();\n        this.drawingContext.closePath();\n    };\n    return Particle;\n}());\nexport { Particle };\n","import { Config } from '../config';\nimport { Particle } from './particle';\nimport { FireworkConfig } from './config';\nvar Firework = /** @class */ (function () {\n    function Firework(drawingContext) {\n        this.drawingContext = drawingContext;\n        this.x = Config.canvasWidth * (Math.random() * 0.8 + 0.1); // from 0.1-0.9 widths\n        this.y = Config.canvasHeight * (Math.random() * 0.8 + 0.1); // from 0.1-0.9 heights\n        this.strength = Math.random() * (FireworkConfig.maxStrength - FireworkConfig.minStrength)\n            + FireworkConfig.minStrength;\n        this.color = Math.trunc(Math.random() * 255) + \",\" + Math.trunc(Math.random() * 255) + \",\"\n            + (\"\" + Math.trunc(Math.random() * 255));\n        this.life = 0;\n        this.particles = [];\n        var n = ~~(Math.random() * (FireworkConfig.maxTrails - FireworkConfig.minTrails)) + FireworkConfig.minTrails;\n        var ay = FireworkConfig.gravity;\n        for (var i = n; i--;) {\n            var ax = FireworkConfig.airResistance;\n            var angle = i * Math.PI * 2 / n;\n            if (angle < Math.PI) {\n                ax *= -1;\n            }\n            var vx = this.strength * Math.sin(angle);\n            var vy = this.strength * Math.cos(angle);\n            this.particles.push(new Particle(drawingContext, this.x, this.y, vx, vy, ax, ay, this.color));\n        }\n    }\n    Firework.prototype.update = function () {\n        this.life++;\n        if (this.life < 0) {\n            return; // allows life to be delayed\n        }\n        for (var i = this.particles.length; i--;) {\n            this.particles[i].update();\n            this.particles[i].draw();\n        }\n    };\n    return Firework;\n}());\nexport { Firework };\n","import { Config } from '../config';\nvar Star = /** @class */ (function () {\n    function Star(drawingContext) {\n        this.drawingContext = drawingContext;\n        this.maxStarRadius = 3;\n        this.flashingFactor = 0.4;\n        this.x = Math.random() * Config.canvasWidth;\n        this.y = Math.random() * Config.canvasHeight;\n        this.r = Math.random() * this.maxStarRadius;\n        this.b = Math.trunc(Math.random() * 100) / 100;\n    }\n    Star.prototype.draw = function () {\n        this.b += this.flashingFactor * (Math.random() - .5);\n        this.drawingContext.fillStyle = \"rgba(255,255,255,\" + this.b + \")\";\n        this.drawingContext.beginPath();\n        this.drawingContext.arc(Math.trunc(this.x), Math.trunc(this.y), this.r, 0, Math.PI * 2);\n        this.drawingContext.fill();\n        this.drawingContext.closePath();\n    };\n    return Star;\n}());\nexport { Star };\n","import { Firework } from './firework';\nimport { Star } from './star';\nimport { Config } from '../config';\nimport { FireworkConfig } from './config';\nvar FireworkService = /** @class */ (function () {\n    function FireworkService(drawingContext, withStars) {\n        this.drawingContext = drawingContext;\n        this.withStars = withStars;\n        this.stars = [];\n        this.isRunning = false;\n        this.mainWithThis = this.main.bind(this);\n        this.firework1 = new Firework(this.drawingContext);\n        this.firework2 = new Firework(this.drawingContext);\n        this.firework2.life = -FireworkConfig.fireworkLifeTime - FireworkConfig.delay;\n        if (this.withStars) {\n            this.createStars();\n        }\n    }\n    FireworkService.prototype.start = function () {\n        this.saveDrawingSurface();\n        this.isRunning = true;\n        this.main();\n    };\n    FireworkService.prototype.stop = function () {\n        this.isRunning = false;\n        if (this.animationId) {\n            window.cancelAnimationFrame(this.animationId);\n        }\n    };\n    FireworkService.prototype.createStars = function () {\n        for (var i = 0; i < FireworkConfig.numberOfStars; i++) {\n            this.stars.push(new Star(this.drawingContext));\n        }\n    };\n    FireworkService.prototype.main = function () {\n        if (this.isRunning) {\n            this.restoreDrawingSurface();\n        }\n        else {\n            return;\n        }\n        this.stars.forEach(function (star) {\n            star.draw();\n        });\n        this.firework1.update();\n        this.firework2.update();\n        if (this.firework1.life === FireworkConfig.fireworkLifeTime * FireworkConfig.delay) {\n            this.firework2 = new Firework(this.drawingContext);\n        }\n        if (this.firework2.life === FireworkConfig.fireworkLifeTime * FireworkConfig.delay) {\n            this.firework1 = new Firework(this.drawingContext);\n        }\n        if (this.isRunning) {\n            this.animationId = window.requestAnimationFrame(this.mainWithThis);\n        }\n    };\n    FireworkService.prototype.saveDrawingSurface = function () {\n        this.previousState = this.drawingContext.getImageData(0, 0, Config.canvasWidth, Config.canvasHeight);\n    };\n    FireworkService.prototype.restoreDrawingSurface = function () {\n        if (this.previousState) {\n            this.drawingContext.putImageData(this.previousState, 0, 0);\n        }\n    };\n    return FireworkService;\n}());\nexport { FireworkService };\n","import { Config } from './config';\nimport { GameEngine } from './game-engine';\nimport { EKeyCode, EMouseClick } from './keyboard-controls';\nimport { EventHandler } from './event-handler';\nimport { FireworkService } from './firework/firework-service';\nvar GameController = /** @class */ (function () {\n    function GameController(drawingContext, playerManager) {\n        this.drawingContext = drawingContext;\n        this.playerManager = playerManager;\n        this.frameLineWidth = 5;\n        this.fireworkService = new FireworkService(this.drawingContext, false);\n        this.drawKeySettings();\n    }\n    /**\n     * This basically starts an entire game.\n     */\n    GameController.prototype.startGameEventListener = function (event) {\n        if (event.keyCode === EKeyCode.Space || event.keyCode === EKeyCode.Enter) {\n            if (this.playerManager.getNumberOfActivePlayers() < 2) {\n                return;\n            }\n            this.drawGameFrames();\n            this.gameEngine = new GameEngine(this.drawingContext, this.playerManager.getPlayers());\n            this.playerManager.initializePlayers();\n            this.startRound();\n            EventHandler.removeEventListener('toggle-ready-keyboard');\n            EventHandler.removeEventListener('toggle-ready-mouse');\n            EventHandler.removeEventListener('start-game');\n        }\n    };\n    /**\n     * Starts a new round.\n     */\n    GameController.prototype.startRound = function () {\n        var _this = this;\n        this.drawPlayingFieldFrame();\n        this.playerManager.initializePlayers();\n        if (this.gameEngine) {\n            this.gameEngine.prepare()\n                .then(function (ranks) {\n                _this.playerManager.updateScores(ranks);\n                _this.drawScoreboard();\n                if (_this.playerManager.getHighestScore() >= _this.getMaxScore()) {\n                    _this.drawWinningScreen();\n                }\n                else {\n                    EventHandler.addEventListener('start-new-round', document, 'keydown', _this.startNextRoundKeyboardEvent.bind(_this));\n                }\n            });\n            EventHandler.addEventListener('start-game-engine', document, 'keydown', this.startEngingeKeyboardEvent.bind(this));\n        }\n    };\n    GameController.prototype.startEngingeKeyboardEvent = function (event) {\n        if (event.keyCode === EKeyCode.Space || event.keyCode === EKeyCode.Enter) {\n            if (this.gameEngine) {\n                this.gameEngine.start();\n            }\n            EventHandler.removeEventListener('start-game-engine');\n        }\n    };\n    GameController.prototype.startNextRoundKeyboardEvent = function (event) {\n        if (event.keyCode === EKeyCode.Space || event.keyCode === EKeyCode.Enter) {\n            if (this.gameEngine) {\n                EventHandler.removeEventListener('start-new-round');\n                this.startRound();\n            }\n        }\n    };\n    GameController.prototype.drawWinningScreen = function () {\n        var _this = this;\n        this.drawingContext.textAlign = 'middle';\n        var fontSize = 40;\n        this.drawingContext.font = fontSize + \"px Fredericka the Great, cursive\";\n        var playersWon = this.playerManager.getPlayers()\n            .filter(function (player) {\n            return player.score === _this.playerManager.getHighestScore();\n        });\n        var textString = playersWon.map(function (player) { return player.name; }).join(', ') + \" won !!!\";\n        var textWidth = this.drawingContext.measureText(textString).width;\n        var xPosition = ((Config.canvasWidth - Config.scoreBoardWith) / 2) - (textWidth / 2);\n        playersWon.forEach(function (player, index) {\n            _this.drawingContext.fillStyle = player.color;\n            var textChunk = \"\" + player.name + (index < playersWon.length - 1 ? ', ' : '');\n            _this.drawingContext.fillText(textChunk, xPosition, (Config.canvasHeight / 2) + (fontSize / 2));\n            xPosition += _this.drawingContext.measureText(textChunk).width;\n        });\n        this.drawingContext.fillStyle = '#ffffff';\n        var textChunk = ' won !!!';\n        this.drawingContext.fillText(textChunk, xPosition, (Config.canvasHeight / 2) + (fontSize / 2));\n        this.fireworkService.start();\n        this.playerManager.resetActiveStatus();\n        this.playerManager.resetScores();\n        EventHandler.addEventListener('start-new-game', document, 'keydown', this.startNewGameKeyboardEvent.bind(this));\n    };\n    GameController.prototype.startNewGameKeyboardEvent = function (event) {\n        if (event.keyCode === EKeyCode.Space || event.keyCode === EKeyCode.Enter) {\n            EventHandler.removeEventListener('start-new-game');\n            this.fireworkService.stop();\n            this.drawKeySettings();\n        }\n    };\n    GameController.prototype.drawKeySettings = function () {\n        var _this = this;\n        this.drawingContext.clearRect(0, 0, Config.canvasWidth, Config.canvasHeight);\n        this.drawingContext.lineWidth = this.frameLineWidth;\n        this.drawingContext.strokeStyle = '#6E6E6E';\n        this.drawingContext.strokeRect(this.frameLineWidth / 2, this.frameLineWidth / 2, Config.canvasWidth - this.frameLineWidth, Config.canvasHeight - this.frameLineWidth);\n        this.playerManager.getPlayers().forEach(function (player, index) {\n            _this.drawingContext.textAlign = 'middle';\n            var fontSize = 20;\n            _this.drawingContext.font = fontSize + \"px Fredericka the Great, cursive\";\n            _this.drawingContext.fillStyle = player.color;\n            _this.drawingContext.fillText(\"( \" + _this.getKeyName(player.leftControl) + \"  \" + _this.getKeyName(player.rightControl) + \" )\", 100, Config.canvasHeight / (_this.playerManager.getPlayers().length + 2) * (index + 1) - (fontSize / 3));\n        });\n        this.drawingContext.textAlign = 'middle';\n        var fontSize = 16;\n        this.drawingContext.font = \"lighter \" + fontSize + \"px Helvetica, Arial, sans-serif\";\n        this.drawingContext.fillStyle = '#ffffff';\n        var textString = 'If 2 or more players have joined, start the game by pressing Space or Enter';\n        var textWidth = this.drawingContext.measureText(textString).width;\n        this.drawingContext.fillText(textString, (Config.canvasWidth / 2) - (textWidth / 2), Config.canvasHeight - 50);\n        EventHandler.addEventListener('toggle-ready-keyboard', document, 'keydown', this.togglePlayerReadyStateKeyboard.bind(this));\n        EventHandler.addEventListener('toggle-ready-mouse', document, 'mousedown', this.togglePlayerReadyStateMouse.bind(this));\n        EventHandler.addEventListener('start-game', document, 'keydown', this.startGameEventListener.bind(this));\n    };\n    GameController.prototype.togglePlayerReadyStateMouse = function (event) {\n        event.preventDefault();\n        if (event.button === 0) {\n            var activePlayer = this.playerManager.getPlayers().find(function (player) {\n                return player.leftControl === EMouseClick.Left;\n            });\n            if (activePlayer) {\n                this.drawPlayerReadyState(activePlayer, true);\n            }\n        }\n        if (event.button === 2) {\n            var activePlayer = this.playerManager.getPlayers().find(function (player) {\n                return player.rightControl === EMouseClick.Right;\n            });\n            if (activePlayer) {\n                this.drawPlayerReadyState(activePlayer, false);\n            }\n        }\n    };\n    GameController.prototype.togglePlayerReadyStateKeyboard = function (event) {\n        var activePlayer = this.playerManager.getPlayers().find(function (player) {\n            return player.leftControl === event.keyCode;\n        });\n        if (activePlayer) {\n            this.drawPlayerReadyState(activePlayer, true);\n        }\n        var inactivePlayer = this.playerManager.getPlayers().find(function (player) {\n            return player.rightControl === event.keyCode;\n        });\n        if (inactivePlayer) {\n            this.drawPlayerReadyState(inactivePlayer, false);\n        }\n    };\n    GameController.prototype.drawPlayerReadyState = function (player, state) {\n        this.drawingContext.textAlign = 'middle';\n        var fontSize = 20;\n        this.drawingContext.font = fontSize + \"px Fredericka the Great, cursive\";\n        this.drawingContext.fillStyle = player.color;\n        var playerIndex = this.playerManager.getPlayers().findIndex(function (currentPlayer) {\n            return currentPlayer === player;\n        });\n        var yPosition = Config.canvasHeight / (this.playerManager.getPlayers().length + 2)\n            * (playerIndex + 1) - (fontSize / 3);\n        this.drawingContext.clearRect(390, yPosition - fontSize, 100, fontSize + 5);\n        player.isActive = state;\n        if (state) {\n            this.drawingContext.fillText('READY', 400, yPosition);\n        }\n    };\n    GameController.prototype.getKeyName = function (keyCode) {\n        switch (keyCode) {\n            case EKeyCode.One:\n                return '1';\n            case EKeyCode.Q:\n                return 'Q';\n            case EKeyCode.LAlt:\n                return 'L . Alt';\n            case EKeyCode.RAlt:\n                return 'R . Alt';\n            case EKeyCode.M:\n                return 'M';\n            case EKeyCode.Comma:\n                return ',';\n            case EKeyCode.P:\n                return 'P';\n            case EKeyCode.SZ:\n                return 'ß';\n            case EKeyCode.Left:\n                return 'L . Arrow';\n            case EKeyCode.Down:\n                return 'D . Arrow';\n            case EKeyCode.Y:\n                return 'Y';\n            case EKeyCode.X:\n                return 'X';\n            case EMouseClick.Left:\n                return 'L . Mouse';\n            case EMouseClick.Right:\n                return 'R . Mouse';\n            default:\n                return '';\n        }\n    };\n    GameController.prototype.drawScoreboard = function () {\n        var _this = this;\n        this.drawingContext.clearRect(Config.canvasWidth - Config.scoreBoardWith, 0, Config.canvasWidth, Config.canvasHeight);\n        this.drawingContext.beginPath();\n        this.drawingContext.rect(Config.canvasWidth - Config.scoreBoardWith, this.frameLineWidth / 2, Config.scoreBoardWith - (this.frameLineWidth / 2), Config.canvasHeight - (this.frameLineWidth));\n        this.drawingContext.fillStyle = '#3C3C3C';\n        this.drawingContext.fill();\n        this.drawingContext.lineWidth = this.frameLineWidth;\n        this.drawingContext.strokeStyle = '#6E6E6E';\n        this.drawingContext.stroke();\n        this.playerManager.getPlayers().forEach(function (player, index) {\n            if (!player.isActive) {\n                return;\n            }\n            _this.drawingContext.textAlign = 'middle';\n            var fontSize = Config.canvasHeight / (_this.playerManager.getPlayers().length + 2);\n            _this.drawingContext.font = fontSize + \"px Fredericka the Great, cursive\";\n            _this.drawingContext.fillStyle = player.color;\n            _this.drawingContext.fillText((\"\" + player.score).padStart(2, ' '), Config.canvasWidth - (Config.scoreBoardWith / 1.25) - (4 * _this.frameLineWidth), Config.canvasHeight / _this.playerManager.getPlayers().length * (index + 1) - (fontSize / 3));\n        });\n    };\n    GameController.prototype.drawGameFrames = function () {\n        this.drawPlayingFieldFrame();\n        this.drawScoreboard();\n    };\n    GameController.prototype.drawPlayingFieldFrame = function () {\n        this.drawingContext.clearRect(0, 0, Config.canvasWidth - Config.scoreBoardWith, Config.canvasHeight);\n        this.drawingContext.lineWidth = this.frameLineWidth;\n        this.drawingContext.strokeStyle = '#6E6E6E';\n        this.drawingContext.strokeRect(this.frameLineWidth / 2, this.frameLineWidth / 2, Config.canvasWidth - Config.scoreBoardWith - (this.frameLineWidth / 2), Config.canvasHeight - this.frameLineWidth);\n    };\n    GameController.prototype.getMaxScore = function () {\n        return (this.playerManager.getNumberOfActivePlayers() - 1) * 10;\n    };\n    return GameController;\n}());\nexport { GameController };\n","import { Config } from './config';\nimport { getRandomNumber } from './utils';\nimport { EMouseClick } from './keyboard-controls';\nvar PlayerManager = /** @class */ (function () {\n    function PlayerManager() {\n        this.players = new Map();\n    }\n    PlayerManager.prototype.addPlayer = function (player) {\n        if (this.players.has(player.id)) {\n            throw new Error('Player with given Id already existing');\n        }\n        this.players.set(player.id, player);\n        this.bindKeyboardControls(player);\n    };\n    PlayerManager.prototype.removePlayer = function (player) {\n        this.players.delete(player.id);\n        // technically we need to unbind keyboard controls here\n        // method currently unused so ¯\\_(ツ)_/¯\n    };\n    PlayerManager.prototype.initializePlayers = function () {\n        Array.from(this.players.values())\n            .filter(function (player) {\n            return player.isActive;\n        })\n            .forEach(function (player) {\n            player.xPosition = getRandomNumber((Config.canvasWidth - Config.scoreBoardWith) / 5, 4 * (Config.canvasWidth - Config.scoreBoardWith) / 5);\n            player.yPosition = getRandomNumber(Config.canvasHeight / 5, 4 * Config.canvasHeight / 5);\n            player.angle = Math.random() * 360;\n            player.isAlive = true;\n        });\n    };\n    PlayerManager.prototype.bindKeyboardControls = function (player) {\n        // Todo: To beb consistent we should use the EventHandler here...\n        document.addEventListener('keydown', function (event) {\n            event.preventDefault();\n            if (event.keyCode === player.leftControl) {\n                player.isTurningLeft = true;\n            }\n            if (event.keyCode === player.rightControl) {\n                player.isTurningRight = true;\n            }\n        });\n        document.addEventListener('keyup', function (event) {\n            event.preventDefault();\n            if (event.keyCode === player.leftControl) {\n                player.isTurningLeft = false;\n            }\n            if (event.keyCode === player.rightControl) {\n                player.isTurningRight = false;\n            }\n        });\n        document.addEventListener('mousedown', function (event) {\n            event.preventDefault();\n            if (event.button === 0) {\n                if (player.leftControl === EMouseClick.Left) {\n                    player.isTurningLeft = true;\n                }\n                if (player.rightControl === EMouseClick.Left) {\n                    player.isTurningRight = true;\n                }\n            }\n            if (event.button === 2) {\n                if (player.leftControl === EMouseClick.Right) {\n                    player.isTurningLeft = true;\n                }\n                if (player.rightControl === EMouseClick.Right) {\n                    player.isTurningRight = true;\n                }\n            }\n        });\n        document.addEventListener('mouseup', function (event) {\n            event.preventDefault();\n            if (event.button === 0) {\n                if (player.leftControl === EMouseClick.Left) {\n                    player.isTurningLeft = false;\n                }\n                if (player.rightControl === EMouseClick.Left) {\n                    player.isTurningRight = false;\n                }\n            }\n            if (event.button === 2) {\n                if (player.leftControl === EMouseClick.Right) {\n                    player.isTurningLeft = false;\n                }\n                if (player.rightControl === EMouseClick.Right) {\n                    player.isTurningRight = false;\n                }\n            }\n        });\n    };\n    PlayerManager.prototype.getPlayers = function () {\n        return Array.from(this.players.values());\n    };\n    PlayerManager.prototype.getNumberOfActivePlayers = function () {\n        return this.getPlayers().filter(function (player) {\n            return player.isActive;\n        }).length;\n    };\n    PlayerManager.prototype.updateScores = function (ranks) {\n        var _this = this;\n        ranks.forEach(function (player, index) {\n            player.score += _this.getNumberOfActivePlayers() - index - 1;\n        });\n    };\n    PlayerManager.prototype.getHighestScore = function () {\n        var scores = Array.from(this.players.values()).map(function (player) {\n            return player.score;\n        });\n        return Math.max.apply(Math, scores);\n    };\n    PlayerManager.prototype.resetActiveStatus = function () {\n        Array.from(this.players.values()).forEach(function (player) {\n            player.isActive = false;\n        });\n    };\n    PlayerManager.prototype.resetScores = function () {\n        Array.from(this.players.values()).forEach(function (player) {\n            player.score = 0;\n        });\n    };\n    return PlayerManager;\n}());\nexport { PlayerManager };\n","var Player = /** @class */ (function () {\n    function Player(id, name, color, leftControl, rightControl) {\n        this._xPosition = 0;\n        this._yPosition = 0;\n        this._angle = 0;\n        this._isAlive = false;\n        this._score = 0;\n        this._isTurningLeft = false;\n        this._isTurningRight = false;\n        this._isActive = false;\n        this._id = id;\n        this._name = name;\n        this._color = color;\n        this._leftControl = leftControl;\n        this._rightControl = rightControl;\n    }\n    Object.defineProperty(Player.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"xPosition\", {\n        get: function () {\n            return this._xPosition;\n        },\n        set: function (value) {\n            this._xPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"yPosition\", {\n        get: function () {\n            return this._yPosition;\n        },\n        set: function (value) {\n            this._yPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"angle\", {\n        get: function () {\n            return this._angle;\n        },\n        set: function (value) {\n            this._angle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"isAlive\", {\n        get: function () {\n            return this._isAlive;\n        },\n        set: function (value) {\n            this._isAlive = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"score\", {\n        get: function () {\n            return this._score;\n        },\n        set: function (value) {\n            this._score = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"isTurningLeft\", {\n        get: function () {\n            return this._isTurningLeft;\n        },\n        set: function (value) {\n            this._isTurningLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"isTurningRight\", {\n        get: function () {\n            return this._isTurningRight;\n        },\n        set: function (value) {\n            this._isTurningRight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"leftControl\", {\n        get: function () {\n            return this._leftControl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"rightControl\", {\n        get: function () {\n            return this._rightControl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"isActive\", {\n        get: function () {\n            return this._isActive;\n        },\n        set: function (value) {\n            this._isActive = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Player;\n}());\nexport { Player };\n","import { GameController } from './game-controller';\nimport { PlayerManager } from './player-manager';\nimport { Player } from './player';\nimport { EColor } from './color';\nimport { Config } from './config';\nimport { EKeyCode, EMouseClick } from './keyboard-controls';\nimport { EventHandler } from './event-handler';\nwindow.onload = function () {\n    Config.canvasWidth = IS_ELECTRON_BUILD ? document.body.clientWidth : document.body.clientWidth - 20;\n    Config.canvasHeight = IS_ELECTRON_BUILD ? document.body.clientHeight : document.body.clientHeight - 50;\n    var canvasId = 'canvas';\n    var canvasElement = document.getElementById(canvasId);\n    if (!canvasElement) {\n        throw new Error('No canvas element found');\n    }\n    canvasElement.width = Config.canvasWidth;\n    canvasElement.height = Config.canvasHeight;\n    var drawingContext;\n    if (canvasElement.getContext) {\n        drawingContext = canvasElement.getContext('2d');\n    }\n    else {\n        throw new Error('No canvas support');\n    }\n    drawIntroText();\n    EventHandler.oneTimeEventListener(document, 'keydown', initGame);\n    function drawIntroText() {\n        var frameLineWidth = 5;\n        drawingContext.lineWidth = frameLineWidth;\n        drawingContext.strokeStyle = '#6E6E6E';\n        drawingContext.strokeRect(frameLineWidth / 2, frameLineWidth / 2, Config.canvasWidth - frameLineWidth, Config.canvasHeight - frameLineWidth);\n        drawingContext.textAlign = 'middle';\n        var fontSize = Config.canvasHeight / 10;\n        drawingContext.font = fontSize + \"px Fredericka the Great, cursive\";\n        drawingContext.fillStyle = '#ffffff';\n        var textString = 'Achtung, die Kurve !';\n        var textWidth = drawingContext.measureText(textString).width;\n        drawingContext.fillText(textString, (Config.canvasWidth / 2) - (textWidth / 2), (Config.canvasHeight / 2) + (fontSize / 2));\n        drawingContext.textAlign = 'middle';\n        drawingContext.font = 'lighter 16px Helvetica, Arial, sans-serif';\n        drawingContext.fillStyle = '#ffffff';\n        textString = 'Press any key to continue';\n        textWidth = drawingContext.measureText(textString).width;\n        drawingContext.fillText(textString, (Config.canvasWidth / 2) - (textWidth / 2), Config.canvasHeight - 50);\n    }\n    function initGame() {\n        var playerManager = new PlayerManager();\n        var player1 = new Player(1, 'Player 1', EColor.Red, EKeyCode.One, EKeyCode.Q);\n        playerManager.addPlayer(player1);\n        var player2 = new Player(2, 'Player 2', EColor.Yellow, EKeyCode.Y, EKeyCode.X);\n        playerManager.addPlayer(player2);\n        var player3 = new Player(3, 'Player 3', EColor.Orange, EKeyCode.M, EKeyCode.Comma);\n        playerManager.addPlayer(player3);\n        var player4 = new Player(4, 'Player 4', EColor.Green, EKeyCode.Left, EKeyCode.Down);\n        playerManager.addPlayer(player4);\n        var player5 = new Player(5, 'Player 5', EColor.Pink, EKeyCode.P, EKeyCode.SZ);\n        playerManager.addPlayer(player5);\n        var player6 = new Player(6, 'Player 6', EColor.Blue, EMouseClick.Left, EMouseClick.Right);\n        playerManager.addPlayer(player6);\n        var game = new GameController(drawingContext, playerManager);\n    }\n};\n"],"sourceRoot":""}